version: 1
module: slazy_agent
description: "Data contract for the Slazy agent system"

types:
  ToolResult:
    kind: dataclass
    fields:
      success: bool
      output: str
      error: "str?"
      metadata: "dict?"

  AgentMessage:
    kind: dataclass
    fields:
      role: str
      content: str
      timestamp: "float?"
      tool_calls: "list[ToolCall]?"

  ToolCall:
    kind: dataclass
    fields:
      id: str
      name: str
      arguments: dict

  AgentConfig:
    kind: dataclass
    fields:
      model: str
      max_tokens: int
      temperature: float
      system_prompt: str
      tools_enabled: "list[str]?"

  FileOperation:
    kind: dataclass
    fields:
      path: str
      operation: str
      content: "str?"
      line_start: "int?"
      line_end: "int?"

classes:
  Agent:
    init:
      config: AgentConfig
      client: object
    attrs:
      messages: list[AgentMessage]
      tools: object
      output_manager: object
    methods:
      process_message:
        args:
          message: str
        returns: AgentMessage
      execute_tool:
        args:
          tool_call: ToolCall
        returns: ToolResult
      get_context:
        args: {}
        returns: str

  BaseTool:
    init:
      name: str
      description: str
    attrs:
      enabled: bool
    methods:
      execute:
        args:
          args: dict
        returns: ToolResult
      validate_args:
        args:
          args: dict
        returns: bool

  WriteCodeTool:
    extends: BaseTool
    init:
      name: str
      description: str
    methods:
      write_file:
        args:
          path: str
          content: str
        returns: ToolResult
      edit_file:
        args:
          path: str
          changes: list[FileOperation]
        returns: ToolResult

  BashTool:
    extends: BaseTool
    init:
      name: str
      description: str
    methods:
      run_command:
        args:
          command: str
          timeout: "int?"
        returns: ToolResult

  EditTool:
    extends: BaseTool
    init:
      name: str
      description: str
    methods:
      apply_edit:
        args:
          file_path: str
          old_content: str
          new_content: str
        returns: ToolResult

functions:
  format_messages:
    args:
      messages: list[AgentMessage]
      max_length: "int?"
    returns: str

  validate_tool_call:
    args:
      tool_call: ToolCall
      available_tools: list[str]
    returns: bool

  extract_code_blocks:
    args:
      content: str
      language: "str?"
    returns: list[str]

  sanitize_input:
    args:
      input_text: str
      max_length: "int?"
    returns: str

  load_system_prompt:
    args:
      prompt_path: str
    returns: str

  track_tokens:
    args:
      input_tokens: int
      output_tokens: int
      model: str
    returns: dict

constants:
  DEFAULT_MODEL: "claude-3-5-sonnet-20241022"
  MAX_TOKENS: 4096
  DEFAULT_TEMPERATURE: 0.1
  TOOL_TIMEOUT: 30
  MAX_MESSAGE_LENGTH: 50000